TABLERO





//El estado del tablero se debe guardar en un archivo
//Guardar datos de cada oficial
//Cantidad de movimientos, capturas de soldados



PREGUNTAR SIMBOLO OFICIAL:
    input simboloOficial
    simboloOK = checkearSimbolo o DEFAULT

    !simboloOK go PREGUNTAR SIMBOLO OFICIAL


PREGUNTAR SIMBOLO SOLDADO:
    input simboloSoldado
    simboloOK = checkearSimbolo o DEFAULT

    !simboloOK go PREGUNTAR SIMBOLO OFICIAL


PREGUNTAR QUIEN INICIA LA PARTIDA:
    input simboloQuienInicia o DEFAULT(soldado)
    quienIniciaOK = checkear

    !quienIniciaOK go to PREGUNTAR QUIEN INICIA LA PARTIDA


PREGUNTAR ORIENTACION:

    input ORIENTACION o DEFAULT
    orientaciones =  {0,90,180,270}

    if noExisteEn(ORIENTACION, orientaciones) go PREGUNTAR ORIENTACION


Loop de juego:

    nroOficiales < 1
        go GananSoldados
    nroSoldados < 9
        go GananOficiales


    jugadorEnTurno = oficial:
    jugadorEnTurno = soldado:

    imprimirEstadisticas()
    imprimirTablero()
    imprimirMensaje()

    <input salir del juego?

    <input posicionAmover?
    posicionValida?
    posicionSimboloOK?  ==jugadorEnTurno

    darDireccion>

    direccionesValidasSoldado = {y{-1} ,x{-1,0,1}}
    direccionesValidasSoldadoEnRojo = {y{0}, x{-1,1}}

    esOficial:
        hay un soldado en su circundante?
        si:
            en esa direccion +1 hay un espacio vacio?
            si:
                El soldado TIENE que moverse o muere.

                nueva direccionDesbloqueada x el turno.
            no:

    direccionesValidasOficial = {y{-1,0,1}, x{-1,0,1}}  y=0 and x=0 no puede ser.

    seMovioADireccionDeMatarSoldado?
        no:
            matarOficial
        si:
            matarEseSoldado


    esEnTerrenoValido? (debe ser vacio, dentro de la matriz, y no pared)


    correrLogica:
        VerSiLosOficialesSePuedenMover()
            si: ok
            no: matar oficial


    nroSoldados = contarSoldados()
    nroOficiales = contarOficiales()

    guardarMapa()

fin loop








































